name: Dependabot scan

on:
  workflow_call:
    inputs:
      github-token:
        required: true
        type: string
      runner:
        required: false
        type: string
        default: self-hosted
      package:
        required: true
        type: string
      version-update-only:
        required: false
        type: boolean
        default: null
      security-update-only:
        required: false
        type: boolean
        default: null

jobs:
  check-type-update:
    runs-on: ubuntu-latest
    outputs:
      run-version-update: ${{ steps.validate.outputs.run_version_update }}
      run-security-update: ${{ steps.validate.outputs.run_security_update }}
    steps:
      - name: Validate input flags
        id: validate
        run: |
          run_version_update=false
          run_security_update=false
          
          if [[ "${{ inputs.version-update-only }}" == "true" ]]; then
            run_version_update=true
          fi

          if [[ "${{ inputs.security-update-only }}" == "true" ]]; then
            run_security_update=true
          fi
          
          if [[ "${{ inputs.version-update-only }}" == "null" && "${{ inputs.security-update-only }}" == "null" ]]; then
            run_version_update=true
            run_security_update=true
          fi
          
          if [ "${{ inputs.version-update-only }}" = "false" ] && [ "${{ inputs.security-update-only }}" = "false" ]; then
            echo "Error: Both version-update-only and security-update-only are false. At least one must be true."
            exit 1
          fi
          
          echo "run_version_update=${run_version_update}" >> $GITHUB_OUTPUT
          echo "run_security_update=${run_security_update}" >> $GITHUB_OUTPUT

  get-release-branch:
    runs-on: ${{ inputs.runner }}
    needs: check-type-update
    outputs:
      release-branch: ${{ steps.get-branch.outputs.release_branch }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch release branches
        run: |
          git fetch --no-tags --prune --depth=5 origin '+refs/heads/release/*:refs/remotes/origin/release/*'

      - name: Get release branch assigned to GitHub output
        run: |
          echo "release_branch=$(git branch -r | grep 'origin/release/' | sed 's/origin\///' | jq -R -s -c 'split("\n")[:-1]' | head -255)" >> $GITHUB_OUTPUT
        id: get-branch

  version-update:
    needs: [ check-type-update, get-release-branch ]
    if: needs.check-type-update.outputs.run_version_update == 'true'
    runs-on: ${{ inputs.runner }}
    strategy:
      matrix:
        branch: ${{fromJson(needs.get-release-branch.outputs.release-branch)}}
    steps:
      - name: Checkout dependabot-core
        uses: actions/checkout@v4
        with:
          repository: tyson-trinh/dependabot-core
          ref: main
          path: dependabot-core

      - name: export Target Branch to GITHUB ENV
        run: |
          echo "TARGET_BRANCH=${{ matrix.branch }}" | tr -d '  ' >> $GITHUB_ENV

      - name: Echo TARGET_BRANCH
        run: echo ${{ env.TARGET_BRANCH }}

      - name: Scan version update with package maven
        env:
          LOCAL_GITHUB_ACCESS_TOKEN: ${{ inputs.github-token }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          PACKAGE_MANAGER: ${{ inputs.package }}
        run: |
          cd dependabot-core
          sed -i 's|<CONTAINER_ARGS_HERE>|CONTAINER_ARGS=("bin/dry-run.rb" "${PACKAGE_MANAGER}" "${GITHUB_REPOSITORY}" "--branch" "${{ env.TARGET_BRANCH }}") |' bin/docker-dev-shell-gh
          chmod +x bin/docker-dev-shell-gh
          bin/docker-dev-shell-gh $PACKAGE_MANAGER

  security-update:
    needs: [ check-type-update, get-release-branch ]
    if: needs.check-type-update.outputs.run_security_update == 'true'
    runs-on: ${{ inputs.runner }}
    strategy:
      matrix:
        branch: ${{fromJson(needs.get-release-branch.outputs.release-branch)}}
    steps:
      - name: Checkout dependabot-core
        uses: actions/checkout@v4
        with:
          repository: tyson-trinh/dependabot-core
          ref: main
          path: dependabot-core

      - name: export Target Branch to GITHUB ENV
        run: |
          echo "TARGET_BRANCH=${{ matrix.branch }}" | tr -d '  ' >> $GITHUB_ENV

      - name: Echo TARGET_BRANCH
        run: echo ${{ env.TARGET_BRANCH }}

      - name: Scan security update with package maven
        env:
          LOCAL_GITHUB_ACCESS_TOKEN: ${{ inputs.github-token }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          PACKAGE_MANAGER: ${{ inputs.package }}
        run: |
          cd dependabot-core
          sed -i 's|<CONTAINER_ARGS_HERE>|CONTAINER_ARGS=("bin/dry-run.rb" "${PACKAGE_MANAGER}" "${GITHUB_REPOSITORY}" "--security_updates_only" "--branch" "${{ env.TARGET_BRANCH }}") |' bin/docker-dev-shell-gh
          chmod +x bin/docker-dev-shell-gh
          bin/docker-dev-shell-gh $PACKAGE_MANAGER
